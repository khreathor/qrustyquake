CC=x86_64-w64-mingw32-gcc
AS=x86_64-w64-mingw32-as
RANLIB=x86_64-w64-mingw32-ranlib
AR=x86_64-w64-mingw32-ar
WINDRES=x86_64-w64-mingw32-windres
STRIP=x86_64-w64-mingw32-strip
PATH+=/opt/cross_win64/bin

CFLAGS_BASE = --static -c -D_USE_WINSOCK2 -lws2_32 -m64 -Wall -D_FILE_OFFSET_BITS=64 -D_WINCROSS
LDFLAGS_BASE = -lm -m64 -mwindows -static-libgcc -lmingw32 -lws2_32
SDL_CFLAGS ?= -I../win/SDL3/include -D_REENTRANT
SDL_LIBS ?= -L../win/SDL3/lib -lSDL3

DEBUG_FLAGS = -g -O0
RELEASE_FLAGS = -O3 -flto

BUILD_TYPE ?= release

ifeq ($(BUILD_TYPE), debug)
CFLAGS = $(CFLAGS_BASE) $(DEBUG_FLAGS) $(SDL_CFLAGS)
LDFLAGS = $(LDFLAGS_BASE)
else
CFLAGS = $(CFLAGS_BASE) $(RELEASE_FLAGS) $(SDL_CFLAGS)
LDFLAGS = $(LDFLAGS_BASE)
endif

SRCS = chase.c cl_demo.c cl_input.c cl_main.c cl_parse.c \
	cl_tent.c cmd.c common.c console.c crc.c \
	cvar.c d_edge.c \
	d_part.c d_polyse.c d_scan.c d_sky.c d_sprite.c \
	d_surf.c d_fog.c d_common.c host.c \
	host_cmd.c in_sdl.c keys.c menu.c \
	model.c net_dgrm.c net_loop.c net_main.c \
	cvarlist.c net_bsd.c net_wins.c pr_cmds.c \
	pr_edict.c pr_exec.c r_aclip.c r_alias.c r_bsp.c \
	r_draw.c r_edge.c r_efrag.c r_light.c r_main.c \
	r_misc.c r_part.c r_sky.c r_sprite.c r_surf.c \
	globals.c sbar.c screen.c snd_dma.c snd_mem.c \
	snd_mix.c snd_sdl.c sv_main.c sv_move.c sv_phys.c \
	sv_user.c sys_sdl.c vid_sdl.c view.c wad.c \
	world.c rgbtoi.c zone.c miniz.c vgatext.c image.c

OBJS = $(SRCS:.c=.o)

TARGET = qrustyquake

all: $(TARGET)

$(TARGET): $(OBJS)
	$(CC) $(OBJS) $(LDFLAGS) $(SDL_LIBS) -o $(TARGET)

%.o: %.c
	$(CC) $(CFLAGS) $< -o $@

debug:
	$(MAKE) -f $(MAKEFILE_LIST) BUILD_TYPE=debug SDL_CFLAGS="$(SDL_CFLAGS)" SDL_LIBS="$(SDL_LIBS)"

release:
	$(MAKE) -f $(MAKEFILE_LIST) BUILD_TYPE=release SDL_CFLAGS="$(SDL_CFLAGS)" SDL_LIBS="$(SDL_LIBS)"

clean:
	rm -f $(OBJS) $(TARGET).exe
